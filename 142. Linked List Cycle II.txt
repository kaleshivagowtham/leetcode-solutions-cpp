142. Linked List Cycle II

--------------------------------------------------------------------

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        
        if(head == NULL || head->next == NULL)
            return 0;

        ListNode *fptr = head->next->next, *sptr = head->next;
        while( fptr != sptr)
        {
            if(fptr == NULL || fptr->next == NULL)
                return 0;

            fptr = fptr->next->next;
            sptr = sptr->next;
        }
        fptr = head;

        while(fptr != sptr)
        {
            fptr = fptr->next;
            sptr = sptr->next;
        }

        return fptr;
    }
};