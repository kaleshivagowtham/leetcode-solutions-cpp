75. Sort Colors
------------------------

Approach
---------------------------
mark the places of division, and then fill the array with values.
Lets consider 2 pointers low and mid.
where low marks the last position of 0s and high marks the last position of 1s. So the rest from mid will be 2s.
Screenshot 2023-07-13 202403.png

Complexity
--------------------------------
Time complexity: O(2n)
Space complexity:O(1)

Code
----------------------------------

class Solution {
public:
    void sortColors(vector<int>& nums) {
        
        int n = nums.size(),i=0;
        int low=0,mid=0;
        while(i<n) {
            if(nums[i] == 0) {
                low++;
                mid++;
            }
            else if(nums[i] == 1) {
                mid++;
            }
            i++;
        }
        low--;mid--;
        for(i=0;i<=low;i++) {
            nums[i] = 0;
        }
        for(i=low+1;i<=mid;i++) {
            nums[i] = 1;
        }
        for(i=mid+1;i<n;i++) {
            nums[i] = 2;
        }
    }
};